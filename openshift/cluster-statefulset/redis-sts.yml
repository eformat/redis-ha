---
apiVersion: v1
kind: ConfigMap
metadata:
  name: redis-cluster
data:
  redis.conf: |+
    activerehashing yes
    aof-load-truncated yes
    aof-rewrite-incremental-fsync yes
    appendfilename "appendonly.aof"
    appendfsync everysec
    appendonly yes
    auto-aof-rewrite-min-size 64mb
    auto-aof-rewrite-percentage 100
    bind 0.0.0.0
    client-output-buffer-limit normal 0 0 0
    client-output-buffer-limit pubsub 32mb 8mb 60
    client-output-buffer-limit slave 256mb 64mb 60
    cluster-config-file /var/lib/redis/data/nodes.conf
    cluster-enabled yes
    cluster-migration-barrier 1
    cluster-node-timeout 15000
    cluster-require-full-coverage no
    daemonize no
    databases 16
    dbfilename dump.rdb
    dir /var/lib/redis/data
    hash-max-ziplist-entries 512
    hash-max-ziplist-value 64
    hll-sparse-max-bytes 3000
    hz 10
    latency-monitor-threshold 0
    list-max-ziplist-entries 512
    list-max-ziplist-value 64
    logfile ""
    loglevel notice
    lua-time-limit 5000
    no-appendfsync-on-rewrite no
    notify-keyspace-events ""
    pidfile /var/run/redis.pid
    port 6379
    protected-mode no
    rdbchecksum yes
    rdbcompression yes
    repl-disable-tcp-nodelay no
    repl-diskless-sync no
    repl-diskless-sync-delay 5
    save 300 10
    save 60 10000
    save 900 1
    set-max-intset-entries 512
    slave-priority 100
    slave-read-only yes
    slave-serve-stale-data yes
    slowlog-log-slower-than 10000
    slowlog-max-len 128
    stop-writes-on-bgsave-error yes
    tcp-backlog 511
    tcp-keepalive 60
    timeout 0
    zset-max-ziplist-entries 128
    zset-max-ziplist-value 64
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: redis-cluster
spec:
  serviceName: redis-cluster
  replicas: 6
  selector:
    matchLabels:
      app: redis-cluster
  template:
    metadata:
      labels:
        app: redis-cluster
    spec:
      containers:
      - name: redis
        image: registry.redhat.io/rhel8/redis-5:latest
        ports:
        - containerPort: 6379
          name: client
        - containerPort: 16379
          name: gossip
        command: ["redis-server", "/var/lib/redis/data/conf/redis.conf"]
        env:
        - name: POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        volumeMounts:
        - name: conf
          mountPath: /var/lib/redis/data/conf
          readOnly: false
        - name: data
          mountPath: /var/lib/redis/data
          readOnly: false
      volumes:
      - name: conf
        configMap:
          name: redis-cluster
          defaultMode: 0755
  volumeClaimTemplates:
  - metadata:
      name: data
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 1Gi
